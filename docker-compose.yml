services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M
    networks:
      - backend-network
    restart: always

  classifier:
    build:
      context: ./classifier
      dockerfile: Dockerfile
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1.5G
        reservations:
          cpus: '1'
          memory: 1G
    volumes:
      - /dev/shm:/dev/shm
    environment:
      - WORKERS=8
      - THREADS=4
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
    networks:
      - backend-network

  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - CLASSIFIER_URL=http://classifier:8000
      - GEMINI_API_BASE_URL=${GEMINI_API_BASE_URL:-https://generativelanguage.googleapis.com/v1beta/models}
      - REDIS_URL=redis://redis:6379
      - PAYMENT_SERVICE_URL=http://payment:8081
      - GOMAXPROCS=2
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    networks:
      - backend-network
    restart: always
    depends_on:
      - redis

  payment:
    build:
      context: ./payment
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    env_file:
      - ./payment/.env
    volumes:
      - ./payment/firebase_env.json:/root/firebase_service_account.json:ro
    environment:
      - FIREBASE_SERVICE_ACCOUNT_PATH=/root/firebase_service_account.json
      - DEVELOPMENT=true
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    networks:
      - backend-network
    restart: always

volumes:
  redis_data:
    driver: local

networks:
  backend-network:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1500
